@model ExpenseManagement.Model.Expense.ItemExpenseModel;
@{
    ViewData["Title"] = "AddEditExpense";
}

<!DOCTYPE html>
<html lang="en">

<head>

    <!--for table add/edit/delete-->
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <!------ Include the above in your HEAD tag ---------->
    
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round|Open+Sans">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>



    <!--kendo css-->
    <link rel="stylesheet" href="https://kendo.cdn.telerik.com/2022.3.1109/styles/kendo.default-v2.min.css"/>

    <script src="https://code.jquery.com/jquery-1.12.4.min.js"></script>
    <script src="https://kendo.cdn.telerik.com/2022.3.1109/js/kendo.all.min.js"></script>



    <style>
        #TotalAmountId{
            align-content: right;
        }
        .table-wrapper {
	    	margin: 10px auto;
            background: #fff;
            padding: 10px;	
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }
        .table-title {
            padding-bottom: 10px;
            margin: 0 0 10px;
        }
        .table-title h2 {
            margin: 6px 0 0;
            font-size: 22px;
        }
        .table-title .add-new {
            float: right;
	    	height: 30px;
	    	font-weight: bold;
	    	font-size: 12px;
	    	text-shadow: none;
	    	min-width: 100px;
	    	border-radius: 50px;
	    	line-height: 13px;
        }
	    .table-title .add-new i {
	    	margin-right: 4px;
	    }
        table.table {
            table-layout: fixed;
        }
        table.table tr th, table.table tr td {
            border-color: #e9e9e9;
        }
        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }
        table.table th:last-child {
            width: 100px;
        }
        table.table td a {
	    	cursor: pointer;
            display: inline-block;
            margin: 0 5px;
	    	min-width: 24px;
        }    
	    table.table td a.add {
            color: #27C46B;
        }
        table.table td a.edit {
            color: #FFC107;
        }
        table.table td a.delete {
            color: #E34724;
        }
        table.table td i {
            font-size: 19px;
        }
	    table.table td a.add i {
            font-size: 24px;
        	margin-right: -1px;
            position: relative;
            top: 3px;
        }    
        table.table .form-control {
            height: 32px;
            line-height: 32px;
            box-shadow: none;
            border-radius: 2px;
        }
	    table.table .form-control.error {
	    	border-color: #f50000;
	    }
	    table.table td .add {
	    	display: none;
	    }

        thead{
            background-color: #6b92d1;
        }
    </style>

</head>
<body>

    <div class="container-fluid bg-light rounded">
        <div class="table-wrapper">
            <div class="table-title">
                <div class="row">
                    <div class="col-sm-8"></div>
                    <div class="col-sm-4">
                        <button type="button" class="btn btn-info add-new"><i class="fa fa-plus"></i> Add New</button>
                    </div>
                </div>
            </div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>ItemName</th>
                        <th>Type</th>
                        <th>SubType</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th>Amount</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
            <div class="container">
                <div class="row">
                    <div class="col-md-7">
                    </div>
                    <div class="col-md-2">
                        <label asp-for="@Model.Expense.TotalAmount">Total Amount: </label>
                    </div>
                    <div class="col-md-2">
                        <input type="number" class="btn-info rounded-pill m-2" asp-for="@Model.Expense.TotalAmount" id="TotalAmountId" readonly/>
                    </div>
                </div> 
                <div class="row">
                    @using (Html.BeginForm("Index", "Document", FormMethod.Post, new { enctype = "multipart/form-data" }))  
                    {   
                        <label> <b></b>Upload Receipts:<b></b></label>
                        <input type="file" name="images" value="" multiple="multiple" /> 
                    } 
                </div>
                <div class="row">
                    <div class="col-md-1">
                        <button type="button" class="btn btn-success rounded-pill m-2" id="saveExpense" onclick="fnModelSave()">Save</button>
                    </div>
                    <div class="col-md-1">
                        <button type="button" class="btn btn-danger rounded-pill m-2">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>  


</body>

<script>
    
     fnAddNew();
     fnSaveItem();
     fnEditRow();
     fnDeleteRow();

    
     //add a new row
    function fnAddNew(){
        // Append table with add row form on add new button click
        $(".add-new").click(function(){
            //var actions = $("table td:last-child").html();
            var actions =   '<a class="add" title="Add" data-toggle="tooltip"><i class="material-icons"></i></a>'+
                            '<a class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons"></i></a>'+
                            '<a class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons"></i></a>';
	    	$(this).attr("disabled", "disabled");
	    	var index = $("table tbody tr:last-child").index();
            index = index+2;
            var row = '<tr>' +
                '<td>' + fnAddElement("","") + '</td>' +
                '<td>' + fnAddElement("","expenseType") + '</td>' +
                '<td>' + fnAddElement("","expenseSubType") + '</td>' +
                '<td>' + fnAddElement("","") + '</td>' +
                '<td>' + fnAddElement("","") + '</td>' +
                '<td>' + fnAddElement("","") + '</td>' +
	    		'<td>' + actions + '</td>' +
            '</tr>';
            
        	$("table").append(row);
	    	$("table tbody tr").eq(index).find(".add, .edit").toggle();

            var typeId = '.'+$("table tbody tr").eq(index-1).find('input[type="text"]').eq(1).attr("class");
            var subTypeId = '.' +$("table tbody tr").eq(index-1).find('input[type="text"]').eq(2).attr("class");

            //$('[data-toggle="tooltip"]').tooltip();

            loadDropdown(typeId,subTypeId);

        });
    };

    //saveItem
    function fnSaveItem(){
        // Add row on add button click
	    $(document).on("click", ".add", function(){
	    	var empty = false;
	    	var input = $(this).parents("tr").find('input[type="text"]');
            input.each(function(index){
                if(index != 5){
                    if(!$(this).val()){
	    			$(this).addClass("error");
	    			empty = true;
	    		    } else{
                        $(this).removeClass("error");
                    }
                }
	    	});
	    	$(this).parents("tr").find(".error").first().focus();
	    	if(!empty){
        
                var rowNo = $("table tbody tr:last-child").index();
                rowNo= rowNo +1;
                var quantity =0;
                var price = 0;
	    		input.each(function(index){
                    if(index == 0 ){
                       $(this).attr('value',$(this).val());
                    }
                    else if(index == 1){
                        $(this).attr('value',$(this).val());
                    }
                    else if(index == 2){
                        $(this).attr('value',$(this).val());
                        
                    }
                    else if(index == 3){
                        $(this).attr('value',$(this).val());
                        quantity = $(this).val();
                    }
                    else if(index == 4){
                        $(this).attr('value',$(this).val());
                        price = $(this).val();
                    }
                    else if(index == 5){
                        $(this).attr('value',parseFloat(quantity)*parseFloat(price));
                    }
                
	    		});	
                
	    		$(this).parents("tr").find(".add, .edit").toggle();
	    		$(".add-new").removeAttr("disabled");
	    	}		
        
            $("#TotalAmountId").attr('value',calculateTotal());
        });
    };

    //editing a row
    function fnEditRow(){
        //// Edit row on edit button click
	    $(document).on("click", ".edit", function(){		
            $(this).parents("tr").find("td:not(:last-child)").each(function(index){

                var currentIndex = $(this).parent("tr").index();
                currentIndex = currentIndex + 1;

                if(index == 0){
                       $(this).children("input").attr('value',$(this).children("input").val());
                }
                else if(index = 1){
                       $(this).children("input").attr('value',$(this).children("input").val());
                }
                else if(index = 2){
                       $(this).children("input").attr('value',$(this).children("input").val());
                }
                else if(index = 3){
                       $(this).children("input").attr('value',$(this).children("input").val());
                }
                else if(index = 4){
                       $(this).children("input").attr('value',$(this).children("input").val());
                }
                else{
                       $(this).children("input").attr('value',$(this).children("input").val());
                }
	    	});		
	    	$(this).parents("tr").find(".add, .edit").toggle();
	    	$(".add-new").attr("disabled", "disabled");
        });
    }

    //delete a row
    function fnDeleteRow(){
        // Delete row on delete button click
	    $(document).on("click", ".delete", function(){
            $(this).parents("tr").remove();
	    	$(".add-new").removeAttr("disabled");
            $("#TotalAmountId").attr('value',calculateTotal());
        });
    };

    //add an input field
    function fnAddElement(value,Class) {
        var ele = "<input type='text' value='"+value+"' class='"+Class+"'/>";
        return ele;
    };

    function calculateTotal(){
        var count = $("table tbody tr:last-child").index();
        count = count+1;
        var sum = 0;
        for(let i = 1; i<=count; i++){
            sum = parseFloat(sum) + parseFloat($("#ItemAmountId"+i).val());
        }

        return sum;
    };

    function loadDropdown(typeId, subTypeId){

        $(typeId).kendoDropDownList({
            optionLabel: "Select Item Type...",
            height: 310,
            footerTemplate: 'Please ensure the type selected is correct',
            dataSource:{
                transport: {
                    read: {
                        url: "https://localhost:7250/api/Common/GetDropDownList",
                        type: "Post",
                        contentType: "application/json",
                        data: {mode: "ExpenseType",condition1: "",condition2: ""},
                        dataType: 'json'
                    },
                    parameterMap: function (data) {
                        var returnData = JSON.stringify(data);
                        return returnData
                    }
                }
            },
            dataTextField: "ddlText",
            dataValueField: "ddlVal"
        }).data("kendoDropDownList");

        $(subTypeId).kendoDropDownList({
                optionLabel: "Select SubType...",
                height: 310,
                footerTemplate: 'Please ensure the subtype selected is correct',
                dataSource:{
                    transport: {
                        read: {
                            url: "https://localhost:7250/api/Common/GetDropDownList",
                            type: "Post",
                            contentType: "application/json",
                            data: {mode: "ExpenseSubType",condition1: "",condition2: ""},
                            dataType: 'json'
                        },
                        parameterMap: function (data) {
                            var returnData = JSON.stringify(data);
                            return returnData
                        }
                    }
                },
                dataTextField: "ddlText",
                dataValueField: "ddlVal"
            }).data("kendoDropDownList");
     };

    function fnGetModelList(){
        var arrList = [];
        $("table tbody tr").each(function(index){

            var model = {
                ItemName: $("table tbody tr").eq(index).find('input[type="text"]').eq(0).val(),
                ExpenseType: $("table tbody tr").eq(index).find('input[type="text"]').eq(1).val(),
                ExpenseSubType: $("table tbody tr").eq(index).find('input[type="text"]').eq(2).val(),
                ItemQuantity: $("table tbody tr").eq(index).find('input[type="text"]').eq(3).val(),
                ItemPrice: $("table tbody tr").eq(index).find('input[type="text"]').eq(4).val(),
                ItemAmount: $("table tbody tr").eq(index).find('input[type="text"]').eq(5).val()
            };
            arrList.push(model);
        });
        return arrList;
    };

    function fnGetItemDetailModel(){
        var itemDetailData = JSON.stringify({
            ItemModelList: fnGetModelList()
        });
        return itemDetailData;
    };

    function fnModelSave(){
        fnGetModelList();
    };
</script>
</html>