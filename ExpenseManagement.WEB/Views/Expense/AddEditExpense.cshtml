@model ExpenseManagement.Model.Expense.ItemExpenseModel;


@{
    Layout = null;
}
</style>
<div class="container-fluid m-2">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-8"></div>
                <div class="col-sm-4">
                    <button type="button" class="btn btn-info add-new"><i class="fa fa-plus"></i> Add New</button>
                </div>
            </div>
        </div>
        <table class="table table-bordered" id="addEditTableId">
            <thead>
                <tr>
                    <th>ItemName</th>
                    <th>Type</th>
                    <th>SubType</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Amount</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if(Model.ExpenseId > 0)
                {
                    int index = Model.Item.Count() - 1;
                    foreach(var item in Model.Item.OrderByDescending(x => x.ItemId))
                    {
                        <tr class="addEditRow">
                                
                            <td>
                                <input type="number" value="@item.ItemId" class="itemClass" hidden/>
                                <input type="text" style="width:100%;" value="@item.ItemName" class=""/>
                            </td>
                            <td>
                                <input type="text" style="width:100%;" value="@item.ExpenseType" class="expenseType"/>
                            </td>
                            <td>
                                <input type="text" style="width:100%;" value="@item.ExpenseSubType" class="expenseSubType"/>
                            </td>
                            <td>
                                <input type="text" style="width:100%;" value="@item.ItemPrice" class=""/>
                            </td>
                            <td>
                                <input type="text" style="width:100%;" value="@item.ItemQuantity" class=""/>
                            </td>
                            <td>
                                <input type="text" style="width:100%;" value="@item.ItemAmount" class=""/>
                            </td>
                            <td>
                                <a class="add" title="Add" data-toggle="tooltip"><i class="material-icons"></i></a>
                                <a class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons"></i></a>
                                <a class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons"></i></a>
                            </td>
                        </tr>
                        index--;
                    }
                }
            </tbody>
        </table>
        <div>
            <div class="row">
                <div class="col-md-2">
                    <input type="text" value="@Model.ExpenseId" id="expenseId" hidden />
                    <input type="number" class="btn-info rounded-pill m-2"  id="TotalAmountId" readonly/>
                </div>
                <div class="col-md-10">
                </div>
            </div>
            <div class="container row m-2">
                <div id="previewContainer" class="row">
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label for="comment" align-left>Comment:</label>
                    <textarea class="form-control" rows="4" columnid="comment"></textarea>
                </div>
                <div class="col-md-6">
                    <form enctype="multipart/form-data" onsubmit="fileUpload(); return false;" method="post">
                        <div class="col-md-6">
                            <label for="FileUpload_FormFile" style="cursor: pointer; color: #0c2f69;">
                                Upload Bills<br/>
                                <i class="bi bi-card-image" style="font-size: 50px"></i>
                                <input id="FileUpload_FormFile" type="file" name="formFile" style="display:none;" multiple/>
                            </label>
                        </div>
                        <div class="col-md-6 row">
                            <div class="row col-md-6 m-1"><button class="btn-sm btn-primary" type="submit">SaveB</button></div>
                            <div class="row col-md-6 m-1"><button class="btn-sm btn-success" type="submit">Reset</button></div>
                        </div> 
                    </form>
                </div>

            </div>
            <div class="row">
                <div class="col-md-1">
                    <button type="button" class="btn btn-success rounded-pill m-2" id="saveExpense" onclick="fnModelSave()">Save</button>
                </div>
                <div class="col-md-1">
                    <button type="button" id="downloadButton" class="btn btn-danger rounded-pill m-2" onclick="fileDownload()">Download</button>
                </div>
            </div>

            <div style="margin-top:15px">
                <div id="fileOuput" class="row">
                </div>
            </div>
        </div>
    </div>  
</div>

<script>
    
    fnPreviewFiles();
    fnWhenLoaded();
    fnAddNew();
    fnSaveItem();
    fnEditRow();
    fnDeleteRow();
    
    //check if atleast one row exist
    if($(".addEditRow:last-child").index() <0){
        $(".add-new").click();
    };

    function fnPreviewFiles(){

        const fileInput = document.getElementById('FileUpload_FormFile');
        const previewContainer = document.getElementById('previewContainer');
            
        fileInput.addEventListener('change', () => 
        {

            previewContainer.innerHTML = ''; // clear previous previews

            for (let i = 0; i < fileInput.files.length; i++) 
            {

                const file = fileInput.files[i];
                const reader = new FileReader();
                        
                reader.onload = (event) => {
                    var row = '<div class="iframeParent col-md-2 m-2">'
                        + '<iframe src='+ event.target.result +' scrolling="no"></iframe>'
                        + '<button><i class="bi bi-trash3-fill"></i></button>'
                        + '</div>';
                    $("#previewContainer").append(row);
                };
                
                reader.readAsDataURL(file);
            }
        });     
     };
    
    function fileDownload(){
        if($('#expenseId').val() !=0){
            $.ajax({
            url: "https://localhost:7250/api/Document/GetFile",
            type: 'GET',
            data: { expenseId: $('#expenseId').val() },
            success: function (result) {
                $("#fileOuput").innerHTML = '';

                var fileServerUrl = "https://localhost:7250/Files/";

                for (let i = 0; i < result.length; i++) {
                    //console.log(result[i].fileDownloadName);
                    var fileurl = fileServerUrl + result[i];
                    var row2 = '<div class="iframeParent col-md-2 m-2">'
                        + '<iframe src=' + fileurl + ' scrolling="no"></iframe>'
                        + '<button class="deleteIframe"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16"><path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z"/></svg></button>'
                        + '</div>';
                    $("#fileOuput").append(row2);
                }
            },
            error: function (res) {
            },
            failure: function (errMsg) {
            }
            });
        }
        else
        {
            toastr.error("Please Upload files first!!");
        }
    };

    //add a new row
    function fnAddNew(){
        // Append table with add row form on add new button click
        $(".add-new").click(function () {
            //var actions = $("table td:last-child").html();
            var actions = '<a class="add" title="Add" data-toggle="tooltip"><i class="material-icons"></i></a>' +
                '<a class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons"></i></a>' +
                '<a class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons"></i></a>';
            $(this).attr("disabled", "disabled");
            var index = $(".addEditRow:last-child").index();
            index = index + 2;
            var row = '<tr class="addEditRow">' +
                '<td>' + fnAddElement("", "") + '</td>' +
                '<td>' + fnAddElement("", "expenseType") + '</td>' +
                '<td>' + fnAddElement("", "expenseSubType") + '</td>' +
                '<td>' + fnAddElement("", "") + '</td>' +
                '<td>' + fnAddElement("", "") + '</td>' +
                '<td>' + fnAddElement("", "") + '</td>' +
                '<td>' + actions + '</td>' +
                '</tr>';

            //$("table").append(row);
            $("#addEditTableId").append(row);
            $(".addEditRow").eq(index).find(".add, .edit").toggle();

            var typeId = '.' + $(".addEditRow").eq(index - 1).find('input[type="text"]').eq(1).attr("class");
            var subTypeId = '.' + $(".addEditRow").eq(index - 1).find('input[type="text"]').eq(2).attr("class");

            //$('[data-toggle="tooltip"]').tooltip();
            loadDropdown(typeId, subTypeId);

        });
        };

    function fnWhenLoaded(){
            if(@Model.ExpenseId>0){
                var index = $(".addEditRow:last-child").index();
                for(let i=0;i<=index;i++){
                    var typeId = '.'+$(".addEditRow").eq(i).find('input[type="text"]').eq(1).attr("class");
                    var subTypeId = '.' +$(".addEditRow").eq(i).find('input[type="text"]').eq(2).attr("class");
                    loadDropdown(typeId,subTypeId);
                }
                fileDownload();
            }
    };

    //saveItem
    function fnSaveItem(){
        // Add row on add button click
        $(document).on("click", ".add", function () {
            var empty = false;
            var input = $(this).parents(".addEditRow").find('input[type="text"]');
            input.each(function (index) {
                if (index != 5) {
                    if (!$(this).val()) {
                        $(this).addClass("error");
                        empty = true;
                    } else {
                        $(this).removeClass("error");
                    }
                }
            });
            $(this).parents(".addEditRow").find(".error").first().focus();
            if (!empty) {

                var rowNo = $(".addEditRow:last-child").index();
                rowNo = rowNo + 1;
                var quantity = 0;
                var price = 0;
                input.each(function (index) {
                    if (index == 0) {
                        $(this).attr('value', $(this).val());
                    }
                    else if (index == 1) {
                        $(this).attr('value', $(this).val());
                    }
                    else if (index == 2) {
                        $(this).attr('value', $(this).val());

                    }
                    else if (index == 3) {
                        $(this).attr('value', $(this).val());
                        quantity = $(this).val();
                    }
                    else if (index == 4) {
                        $(this).attr('value', $(this).val());
                        price = $(this).val();
                    }
                    else if (index == 5) {
                        $(this).attr('value', parseFloat(quantity) * parseFloat(price));
                    }

                });

                $(this).parents(".addEditRow").find(".add, .edit").toggle();
                $(".add-new").removeAttr("disabled");
            }

            $("#TotalAmountId").attr('value', calculateTotal());
        });
        };

    //editing a row
    function fnEditRow(){
        //// Edit row on edit button click
        $(document).on("click", ".edit", function () {
            $(this).parents(".addEditRow").find("td:not(:last-child)").each(function (index) {

                var currentIndex = $(this).parent(".addEditRow").index();
                currentIndex = currentIndex + 1;

                if (index == 0) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else if (index = 1) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else if (index = 2) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else if (index = 3) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else if (index = 4) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
            });
            $(this).parents(".addEditRow").find(".add, .edit").toggle();
            $(".add-new").attr("disabled", "disabled");
        });
        }

    //delete a row
    function fnDeleteRow(){

        // Delete row on delete button click
        $(document).on("click", ".delete", function () {

            $(this).parents(".addEditRow").remove();
            $(".add-new").removeAttr("disabled");
            //$("#TotalAmountId").attr('value', calculateTotal());

        });
        };

    //add an input field
    function fnAddElement(value,Class) {
        var ele = "<input style='width: 100%;' type='text' value='"+value+"' class='"+Class+"' />";
        return ele;
    };

    function calculateTotal(){

        var count = $(".addEditRow:last-child").index();
        count = count+1;
        var sum = 0;
        for(let i = 1; i<=count; i++){
            sum = parseFloat(sum) + parseFloat($("#ItemAmountId" + i).val());
        }
        return sum;

    };

    function loadDropdown(typeId, subTypeId){

        $(typeId).kendoDropDownList({
            optionLabel: "Select Item Type...",
            height: 310,
            footerTemplate: 'Please ensure the type selected is correct',
            dataSource: {
                transport: {
                    read: {
                        url: "https://localhost:7250/api/Common/GetDropDownList",
                        type: "Post",
                        contentType: "application/json",
                        data: { mode: "ExpenseType", condition1: "", condition2: "" },
                        dataType: 'json'
                    },
                    parameterMap: function (data) {
                        var returnData = JSON.stringify(data);
                        return returnData
                    }
                }
            },
            dataTextField: "ddlText",
            dataValueField: "ddlVal"
        }).data("kendoDropDownList");

    $(subTypeId).kendoDropDownList({
        optionLabel: "Select SubType...",
    height: 310,
    footerTemplate: 'Please ensure the subtype selected is correct',
    dataSource:{
        transport: {
        read: {
        url: "https://localhost:7250/api/Common/GetDropDownList",
    type: "Post",
    contentType: "application/json",
    data: {mode: "ExpenseSubType",condition1: "",condition2: ""},
    dataType: 'json'
                            },
    parameterMap: function (data) {
                                var returnData = JSON.stringify(data);
    return returnData
                            }
                        }
                    },
    dataTextField: "ddlText",
    dataValueField: "ddlVal"
                }).data("kendoDropDownList");
         };

    function fnGetModelList(){
        var arrList = [];
    $(".addEditRow").each(function(index){

            var model = {
        itemId: $(".addEditRow").eq(index).find('input[type="number"]').eq(0).val(),
    expenseId: 0,
    itemName: $(".addEditRow").eq(index).find('input[type="text"]').eq(0).val(),
    expenseType: $(".addEditRow").eq(index).find('input[type="text"]').eq(1).val(),
    expenseSubType: $(".addEditRow").eq(index).find('input[type="text"]').eq(2).val(),
    itemPrice: $(".addEditRow").eq(index).find('input[type="text"]').eq(4).val(),
    itemQuantity: $(".addEditRow").eq(index).find('input[type="text"]').eq(3).val(),
    itemAmount: $(".addEditRow").eq(index).find('input[type="text"]').eq(5).val()
            };
    arrList.push(model);
        });
    return arrList;
        };

    function fnGetItemDetailModel(){
            var itemDetailData = JSON.stringify({
        expenseId : $('#expenseId').val(),
    item: fnGetModelList()
            });
    return itemDetailData;
        };

    function fnModelSave(){

        $.ajax({
            url: "https://localhost:7250/api/Expense/SaveExpense",
            type: 'POST',
            datatype: 'json',
            data: fnGetItemDetailModel(),
            contentType: "application/json;charset=utf-8",
            success: function (result) {

                console.log(result.expenseId);
                console.log(result.retMsg);
                console.log(result);

                $('#expenseId').attr('value',result.expenseId);
                toastr.success(result.retMsg);
            },
            error: function (res) {
                toastr.error(res);
            },
            failure: function (errMsg) {
            }
        });
        };

    function fileUpload(){
        
        if($('#expenseId').val() != 0){
            // Checking whether FormData is available in browser  
            if (window.FormData !== undefined) {  

                var fileUpload = $("#FileUpload_FormFile").get(0);
                var files = fileUpload.files;

                // Create FormData object  
                var fileData = new FormData();

                // Looping over all files and add it to FormData object  
                for (var i = 0; i < files.length; i++) {
                    fileData.append($('#expenseId').val(), files[i]);  
                }

                $.ajax({
                    url: 'https://localhost:7250/api/Document/Upload',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result) {
                        toastr.success(result);
                    },
                    error: function (err) {
                        toastr.error(err.statusText);  
                    }  
                    });  
            } 
            else 
            {
                toastr.error("FormData is not supported.");  
            }  
        } 
        else
        {
            toastr.error("Please Save Expense Item Detail First !!");
        }
    };

</script>