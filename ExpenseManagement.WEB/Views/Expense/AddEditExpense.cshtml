@model ExpenseManagement.Model.Expense.ItemExpenseViewModel;

@{
    Layout = null;
    var userId = User.Claims.FirstOrDefault(c=>c.Type == "UserId")?.Value;
    var Branch = User.Claims.FirstOrDefault(c => c.Type == "BrName")?.Value;
    var BrCode = Int16.Parse(User.Claims.FirstOrDefault(c => c.Type == "BrCode")?.Value);
    var Username = User.Identity.Name;
    var userbranchstatus = 0;
    if (Model.BranchName == null) Model.BranchName = Branch;
    if (Model.AppliedBy == null) Model.AppliedBy = Username;
    if(BrCode == 100)
    {
        userbranchstatus = 6;
    }
    else if(BrCode >=700 && BrCode <= 900)
    {
        userbranchstatus = 2;
    }
    else
    {
        userbranchstatus = 9;
    }
    if (Model.Status == 0) Model.Status = userbranchstatus;
}


<div class="container-fluid m-2">
    <div class="table-wrapper">
        <div class="table-title">
            <div class="row">
                <div class="col-sm-4">
                    <label asp-for="ExpenseBy">ExpenseBy :</label>
                    <input asp-for="ExpenseBy" type="text"  value = "@Model.ExpenseBy" />
                </div>
                <div class="col-sm-4">
                    <label asp-for="BranchName">Branch :</label>
                    <input asp-for="BranchName" type="text" value="@Model.BranchName" readonly/>
                </div>
                <div class="col-sm-4">
                    <label asp-for="AppliedBy">AppliedBy :</label>
                    <input asp-for="AppliedBy" type="text"  value = "@Model.AppliedBy" readonly />
                </div>
            </div>
        </div>
        <div class="table-title">
            <div class="row">
                <div class="col-sm-4">
                    <label asp-for="ExpenseTitle">ExpenseTitle :</label>
                    <input asp-for="ExpenseTitle" type="text" value = "@Model.ExpenseTitle" />
                </div>
                <div class="col-sm-3">
                    <label for="statusId">Status :</label>
                    <input type="text" id="statusId" value="@Model.Status" />
                </div>
                <div class="col-sm-4">
                    <button type="button" class="btn btn-info add-new"><i class="fa fa-plus"></i> Add New</button>
                </div>
            </div>
        </div>
        <table class="table table-bordered" id="addEditTableId">
            <thead>
                <tr>
                    <th>Type</th>
                    <th>ItemName</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Amount</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if(Model.ExpenseId > 0)
                {
                    int index = 0;
                    foreach(var item in Model.Item.OrderByDescending(x=>x.ItemId))
                    {
                        if(@index < Model.Item.Count())
                        {
                            <tr class="addEditRow">
                                <td>
                                    <input type="text" id ="firstItemName@(index)" style="width:100%;" value="@item.ExpenseType" class="expenseType"/>
                                </td>
                                <td>
                                    <input type="number" value="@item.ItemId" class="itemClass" hidden/>
                                    <input type="text" id ="secondItemName@(index)" style="width:100%;" value="@item.ItemName" class=""/>
                                </td>
                                <td>
                                    <input type="text" id ="thirdItemName(@index)" style="width:100%;" value="@item.ItemPrice" class=""/>
                                </td>
                                <td>
                                    <input type="text" id ="fourthItemName@(index)" style="width:100%;" value="@item.ItemQuantity" class=""/>
                                </td>
                                <td>
                                    <input type="text" id ="fifthItemName@(index)" style="width:100%;" value="@item.ItemAmount" class="amountClass" readonly/>
                                </td>
                                <td>
                                    <a class="add" title="Add" data-toggle="tooltip"><i class="material-icons"></i></a>
                                    <a class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons"></i></a>
                                    <a class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons"></i></a>
                                </td>
                            </tr>
                            index++;
                        }
                        
                        
                    }
                }
            </tbody>
        </table>
        <div class="row m-2">
            <div class="col-md-8">
                <div class="row m-2">
                    <div class="form-check form-switch col-md-3">
                      <input class="form-check-input" type="checkbox" id="IsRecommendedId" value="@Model.IsRecommended">
                      <label class="form-check-label" for="IsRecommendedId">IsRecommended</label>
                    </div>
                    <div class="col-md-5" id="deptId">
                        <div class="col-md-8">
                            <label class="form-check-label" for="DepartmentId">Department:</label>
                            <input type="text" id="departmentId" value="@Model.DepartmentId" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-check-label" for="Recommender">By:</label>
                            <input type="text" id="recommenderId" value="@Model.Recommender" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-1">
                <label><b>Total:</b></label>
            </div>
            <div class="col-md-3">
                <input type="text" class="btn-info rounded-pill m-2"  id="TotalAmountId" asp-for= "@Model.TotalAmount" readonly/>
                <input type="text" value="@Model.ExpenseId" id="expenseId" hidden />
            </div>
        </div>
        <div class="container row m-2" id="fileContainerId">
                <div id="previewContainer" class="row">
                </div>
                <div class="row col-md-1 m-1"><button class="btn-sm btn-success-pill" id="resetId"><i class="bi bi-arrow-clockwise"></i></button></div>
        </div>
        <div class="row">
                <div class="col-md-6">
                    <label for="descId" align-left>Description:</label>
                    <textarea class="form-control" rows="4" id="descId" value="@Model.Comment"></textarea>
                </div>
                <div class="col-md-6">
                    <form enctype="multipart/form-data" onsubmit="fileUpload(); return false;" method="post">
                        <div class="col-md-6">
                            <label for="FileUpload_FormFile" style="cursor: pointer; color: #0c2f69;">
                                Upload Bills<br/>
                                <i class="bi bi-card-image" style="font-size: 50px"></i>
                                <input id="FileUpload_FormFile" type="file" name="formFile" style="display:none;" multiple/>
                            </label>
                        </div>
                        <!--div class="col-md-6 row">
                            <div class="row col-md-6 m-1"><button class="btn-sm btn-success" id="saveBill" type="submit">Bills<i class="bi bi-cloud-upload-fill"></i></button></div>
                        </div> -->
                    </form>
                </div>

        </div>
            <div class="row">
                <div class="col-md-1 ">
                    <button type="button" class="btn btn-success rounded-pill m-2" id="saveExpense" onclick="fnModelSave()"><i class="bi bi-upload"></i> &nbsp;Save</button>
                </div>
                
            @if (Model.ExpenseId > 0)
            {
                @if (Model.IsApproved == 0)
                {
                    @if (Model.IsAuthorisedToApprove == 1)
                    {
                        <div class="col-md-3">
                            <button type="button" class="btn btn-success rounded-pill m-2" onclick="fnApproveExpense()">Approve</button>
                        </div>
                        <div class="col-md-3">
                            <button type="button" class="btn btn-danger rounded-pill m-2" onclick="fnRejectExpense()">Reject</button>
                        </div>
                    }
                    else if (@BrCode != 100)
                    {
                        @if ((@BrCode >= 700) & (@BrCode <= 900))
                        {
                            @if ((Model.Status == 2) )
                            {
                                <div class="col-md-3">
                                    <button type="button" class="btn btn-success rounded-pill m-2"  onclick="fnModelApprove()">Send For Approval</button>
                                </div>
                                <div class="col-sm-3">
                                    <input asp-for="Status" type="text" value="@Model.Status" />
                                </div>
                            }
                            @if ((Model.Status == 6))
                            {
                                <div class="col-md-3">
                                    <button type="button" class="btn btn-danger rounded-pill m-2" onclick="fnModelCancelApprove()">Cancel Approval Request</button>
                                </div>
                            }
                        }
                        else
                        {
                            @if (Model.Status == 9)
                            {
                                <div class="col-md-3">
                                    <button type="button" class="btn btn-success rounded-pill m-2" id="approveExpense" onclick="fnModelApprove()">Send For Approval</button>
                                </div>
                                <div class="col-sm-3">
                                    <input asp-for="Status" type="text" value="@Model.Status" />
                                </div>
                            }
                            else if (Model.Status == 2 || Model.Status == 6)
                            {
                                <div class="col-md-3">
                                    <button type="button" class="btn btn-danger rounded-pill m-2" id="RemoveApproveExpense" onclick="fnModelCancelApprove()">Cancel Approval Request</button>
                                </div>

                            }
                        }
                    }
                }
                else
                {
                    @if (Model.ApprovedBy == @userId)
                    {
                        <div class="col-md-3">
                            <button type="button" class="btn btn-danger rounded-pill m-2"  onclick="fnCancelExpenseApproval()">Cancel Approval</button>
                        </div>
                    }
                }
            }
            <div class="col-md-1 ml-4">
                <a asp-controller="Expense" asp-action="index" type="button" class="btn btn-primary rounded-pill m-2" ><i class="bi bi-skip-backward-circle"></i> &nbsp;Back </a>
            </div>

            
                
                <!--<div class="col-md-1">
                    <button type="button" id="downloadButton" class="btn btn-danger rounded-pill m-2" onclick="fileDownload()">Download</button>
                </div>-->
            </div>
        </div>
    </div>  
</div>

<script>

    var isRecommended = false;

    fnWhenLoaded();
    fnPreviewFiles();
    fnAddNew();
    fnSaveItem();
    fnEditRow();
    fnDeleteRow();
    
    function fnDisableAddEditRow(){
        var rowCount = $('.addEditRow:last-child').index();
        for(let i=0;i<=rowCount;i++){
            for(let j=0;j<=4;j++){
                $('.addEditRow').eq(i).find('input[type="text"]').eq(j).attr('disabled','disabled');
            }
        }
    };

    function fnEnableAddEditRow(){
        var rowCount = $('.addEditRow:last-child').index();
        for(let i=0;i<=rowCount;i++){
            for(let j=0;j<=4;j++){
                $('.addEditRow').eq(i).find('input[type="text"]').eq(j).removeAttr('disabled','disabled');
            }
        }
    };
    
    $('#resetId').on('click',function(){
        $('#previewContainer').empty();
        $("#fileContainerId").hide();
    });

    //check if atleast one row exist
    if($(".addEditRow:last-child").index() <0){
        $(".add-new").click();
    };

    function fnPreviewFiles(){

        const fileInput = document.getElementById('FileUpload_FormFile');
        const previewContainer = document.getElementById('previewContainer');
            
        fileInput.addEventListener('change', () => 
        {
            previewContainer.innerHTML = ''; // clear previous previews

            for (let i = 0; i < fileInput.files.length; i++) 
            {

                const file = fileInput.files[i];
             

                const reader = new FileReader();
                
                reader.onload = (event) => {

                    var extension = file.name.split(".");
                    extension = extension[1];
                    if(extension == "docx" || extension == "doc" ){
                       var fileImageUrl = '@Url.Content("~/img/docx.png")';
                    }
                    else if(extension == "xls" || extension == "xlsx")
                    {
                       var fileImageUrl = '@Url.Content("~/img/excel.png")';
                    }
                    else if(extension == "pptx"){
                       var fileImageUrl = '@Url.Content("~/img/ppt.png")';
                    }
                    else
                    {
                        var fileImageUrl = event.target.result;
                    }

                    var row = '<div class="iframeParent col-md-2 m-2">'
                        + '<iframe src='+ fileImageUrl +' scrolling="no"></iframe>'
                        + '<button class="uploadConfirm m-1"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle" viewBox="0 0 16 16"><path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/><path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"/></svg></button>'
                        + '<button class="deleteIframe m-1"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16"><path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z"/></svg></button>'
                        + '</div>';
                    $("#previewContainer").append(row);
                    $("#fileContainerId").show();
                };
                
                reader.readAsDataURL(file);
            }
        });     
     };
    
    function fileDownload(){
        if($('#expenseId').val() !=0){
            $.ajax({
            url: WebApiUri+"/Document/GetFile",
            type: 'GET',
            data: { expenseId: $('#expenseId').val() },
            beforeSend: function(xhr){
                            xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                        },
            success: function (result) {

                var fileServerUrl = WebApiUri + "/Files/";

                for (let i = 0; i < result.length; i++) {
                    var filename = result[i];
                    var extension = filename.split(".");
                    extension = extension[1];
                    if(extension == "docx" || extension == "doc" ){
                       var fileImageUrl = '@Url.Content("~/img/docx.png")';
                    }
                    else if(extension == "xls" || extension == "xlsx"){
                       var fileImageUrl = '@Url.Content("~/img/excel.png")';
                    }
                    else if(extension == "pptx"){
                       var fileImageUrl = '@Url.Content("~/img/ppt.png")';
                    }
                    else
                    {
                        var fileImageUrl = fileServerUrl + '/'+ $('#expenseId').val() +'/'+ filename;
                    }
                    
                    var fileurl = fileServerUrl + '/'+ $('#expenseId').val() +'/'+ filename;
                    var row2 = '<div class="iframeParent col-md-2 m-2">'
                        + '<iframe src=' + fileImageUrl + ' scrolling="no"></iframe>'
                        + '<button class="uploadConfirm m-1"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle" viewBox="0 0 16 16"><path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/><path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"/></svg></button>'
                        + '<a href='+ fileurl +' target="_blank"><button class="viewIframeContent m-1"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye-fill" viewBox="0 0 16 16"><path d="M10.5 8a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0z"/><path d="M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7z"/></svg></button></a>'
                        + '<button class="deleteIframe m-1"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3-fill" viewBox="0 0 16 16"><path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z"/></svg></button>'
                        + '</div>';
                    $("#previewContainer").append(row2);
                    $("#previewContainer").append(row2);
                    $("#fileContainerId").show();
                }
            },
            error: function (res) {
            },
            failure: function (errMsg) {
            }
            });
        }
    };

    //add a new row
    function fnAddNew(){
        // Append table with add row form on add new button click
        $(".add-new").click(function () {
            //var actions = $("table td:last-child").html();
            var actions = '<a class="add" title="Add" data-toggle="tooltip"><i class="material-icons"></i></a>' +
                '<a class="edit" title="Edit" data-toggle="tooltip"><i class="material-icons"></i></a>' +
                '<a class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons"></i></a>';
            $(this).attr("disabled", "disabled");
            var index = $(".addEditRow:last-child").index();
            index = index + 1;
            var row = '<tr class="addEditRow">' +
                      '<td>' + fnAddElement("", "firstItemName"+index , "expenseType") + '</td>' +
                      '<td>' + fnAddElement("", "secondItemName"+index , "") + '</td>' +
                      '<td>' + fnAddElement("", "thirdItemName"+index , "") + '</td>' +
                      '<td>' + fnAddElement("", "fourthItemName"+index , "") + '</td>' +
                      '<td>' + fnAddElement("", "fifthItemName"+index , "amountClass") + '</td>' +
                      '<td>' + actions + '</td>' +
                      '</tr>';

            $("#addEditTableId").append(row);
            
            var typeId = '#' + $(".addEditRow").eq(index).find('input[type="text"]').eq(0).attr("id");

            loadDropdown(typeId,false);
            fnDisableAddEditRow();

        });
        };

    function fnWhenLoaded(){

            //if need to be disabled
            fnDisableifApproved();

            $("#statusId").kendoDropDownList({
            optionLabel: "Expense Status",
            height: 310,
            dataSource:{
                transport: {
                read: {
                url: WebApiUri + "/Common/GetDropDownList",
            type: "Post",
            contentType: "application/json",
            data: {mode: "ForwardList",condition1: "",condition2: ""},
            dataType: 'json',
            beforeSend: function(xhr){
                                    xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                                }
                                    },
            parameterMap: function (data) {
                                        var returnData = JSON.stringify(data);
            return returnData;
                                    }
                                }
                            },
            dataTextField: "ddlText",
            dataValueField: "ddlVal"}).data("kendoDropDownList").enable(false);

            fnForwardList();

            $("#fileContainerId").hide();
            $("#deptId").hide();
            if('@Model.Comment' !=''){
                $('#descId').val('@Model.Comment');
            }
            if('@Model.IsRecommended' == 'True'){
                $('#IsRecommendedId').prop('checked',true);
                $('#deptId').show();
            }
            if(@Model.TotalAmount > 0){
                $('#TotalAmountId').val(fnSeparator(@Model.TotalAmount));
            }
            
            //handling the departmentnames switch
            
            loadDepartmentDropdown("#departmentId");
            $('#IsRecommendedId').on('change',function(e){
                let checkboxValue = e.target.checked;
                if(checkboxValue == true){
                    $('#deptId').show();
                    isRecommended = true;
                }
                else{
                    $("#deptId").hide();
                    isRecommended = false;
                }
            });

            if(@Model.ExpenseId>0){
                var index = $(".addEditRow:last-child").index();
                for(let i=0;i<=index;i++){
                    var typeId = '#'+$(".addEditRow").eq(i).find('input[type="text"]').eq(0).attr("id");
                    loadDropdown(typeId,false);
                }

                fnDisableAddEditRow();
                fileDownload();
            }
    };

    //saveItem
    function fnSaveItem(){
        // Add row on add button click
        $(document).on("click", ".add", function () {
            var empty = true;
            var emptyQuantity = true;
            var emptyPrice = true;
            var input = $(this).parents(".addEditRow").find('input[type="text"]');
            input.each(function (index) {
                if (index != 0 && index != 4) {

                   if ($(this).val().length != 0) {

                       if(index == 0){
                           if($(this).val() == 1009){

                               if($(this).parent().children("input:nth-child(2)").val() != 0){

                                   $(this).parent().children("input:nth-child(2)").addClass("clsRedBox");
                                   empty= true;
                               }
                               else
                               {
                                   $(this).parent().children("input:nth-child(2)").removeClass("clsRedBox");
                                   empty= false;
                               }
                           }
                           else
                           {
                               $(this).parent().children("input:nth-child(2)").removeClass("clsRedBox");
                               empty= false;
                           }
                       }
                       else if(index == 2){
                           var quantity = $(this).val();
                           var ifnumber = checkIfValidNumber(quantity.toString());
                           if(ifnumber == true){
                               $(this).removeClass("clsRedBox");
                               emptyQuantity = false;
                           }
                           else
                           {
                               $(this).addClass("clsRedBox");
                               emptyQuantity = true;
                           }
                       }
                       else if(index == 3){

                           var price = $(this).val();
                           var ifnumber = checkIfValidNumber(price.toString());
                           if(ifnumber == true){
                               $(this).removeClass("clsRedBox");
                               emptyPrice = false;
                           }
                           else
                           {
                               $(this).addClass("clsRedBox");
                               emptyPrice = true;
                           }
                       }
                       else{

                           $(this).removeClass("clsRedBox");
                           empty = false;

                       }
                   
                   } else {
                   
                       $(this).addClass("clsRedBox");
                       empty = true;
                   }
                }
            });

            $(this).parents(".addEditRow").find(".error").first().focus();

            if (!empty & !emptyQuantity & !emptyPrice) {

                var rowNo = $(".addEditRow:last-child").index();
                rowNo = rowNo + 1;
                var quantity = 0;
                var price = 0;
                input.each(function (index) {
                    if (index == 0) {
                        var typeId = '#' + $(this).attr("id");
                        loadDropdown(typeId,false);
                        $(this).attr('value', $(this).val());
                    }
                    else if (index == 1) {
                        $(this).attr('value', $(this).val());
                    }
                    else if (index == 2) {
                        $(this).attr('value', $(this).val());
                        quantity = $(this).val();
                    }
                    else if (index == 3) {
                        $(this).attr('value', $(this).val());
                        price = $(this).val();
                    }
                    else if (index == 4) 
                    {
                        $(this).attr('value', parseFloat(quantity) * parseFloat(price));
                    }
                });

                fnDisableAddEditRow();
                $(this).parents(".addEditRow").find(".add, .edit").toggle();
                $(".add-new").removeAttr("disabled");

                $("#TotalAmountId").attr('value', fnSeparator(calculateTotal()));
            }

        });
        };

    //editing a row
    function fnEditRow(){

        // Edit row on edit button click
        $(document).on("click", ".edit", function () {

            //enable all input
            fnEnableAddEditRow();
            $(this).parents(".addEditRow").find("td:not(:last-child)").each(function (index) {

                
                if (index == 0) {
                    var typeId = '#' + $(this).children().children("input").attr("id");
                    loadDropdown(typeId,true);
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else if (index = 1) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else if (index = 2) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else if (index = 3) {
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
                else {
                    $(this).children("input").attr('value', $(this).children("input").val());
                    $(this).children("input").attr('value', $(this).children("input").val());
                }
            });
            $(this).parents(".addEditRow").find(".add, .edit").toggle();
            $(".add-new").attr("disabled", "disabled");
        });
        }

    //delete a row
    function fnDeleteRow(){

        // Delete row on delete button click
        $(document).on("click", ".delete", function () {

            $(this).parents(".addEditRow").remove();


            $(this).parents(".addEditRow").find("td:not(:last-child)").each(function (index) {
                
                if (index == 0) {
                    $(this).children().children("input").attr("id",firstItemName+index);
                }
                else if (index = 1) {
                    $(this).children("input").attr("id", secondItemName+index);
                }                                           
                else if (index = 2) {                       
                    $(this).children("input").attr("id", thirdItemName+index);
                }                                           
                else if (index = 3) {                       
                    $(this).children("input").attr("id", fourthItemName+index);
                }                                           
                else {                                      
                    $(this).children("input").attr("id", fifthItemName+index);
                }
            });


            $(this).parents(".addEditRow").find(".add, .edit").toggle();
            //$(".add-new").attr("disabled", "disabled");
            $(".add-new").removeAttr("disabled");
        });


            //$(".add-new").removeAttr("disabled");
            //$("#TotalAmountId").attr('value', calculateTotal());
    };

    //add an input field
    function fnAddElement(value,idNo,Class) {

        if(Class == 'amountClass')
        {
            var ele = "<input style='width: 100%;' id='"+ idNo +"' type='text' value='"+value+"' class='"+Class+"' readonly/>";
        }
        else{
            var ele = "<input style='width: 100%;' id='"+ idNo +"' type='text' value='"+value+"' class='"+Class+"' />";
        }
        
        return ele;
    };

    function calculateTotal(){

        var count = $(".addEditRow:last-child").index();
        count = count+1;
        var sum = 0;
        for(let i = 1; i<=count; i++){
            sum = parseFloat(sum) + parseFloat($('.addEditRow').eq(i-1).find('input[type="text"]').eq(4).val());
        }
        return sum;
    };

    function loadDepartmentDropdown(typeId){
         $(typeId).kendoDropDownList({
            optionLabel: "Select Department...",
            height: 310,
            footerTemplate: 'Please ensure the type selected is correct',
            dataSource: {
                transport: {
                    read: {
                        url: WebApiUri+"/Common/GetDropDownList",
                        type: "Post",
                        contentType: "application/json",
                        data: { mode: "Department", condition1: "", condition2: "" },
                        dataType: 'json',
                        beforeSend: function(xhr){
                            xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                        }
                    },
                    parameterMap: function (data) {
                        var returnData = JSON.stringify(data);
                        return returnData
                    }
                }
            },
            dataTextField: "ddlText",
            dataValueField: "ddlVal"
        }).data("kendoDropDownList");

    };

    function loadDropdown(typeId,isEnabled){
        
        var enabledDropdown =    $(typeId).kendoDropDownList({
                optionLabel: "Select Item Type...",
                height: 310,
                footerTemplate: 'Please ensure the type selected is correct',
                dataSource: {
                    transport: {
                        read: {
                            url: WebApiUri + "/Common/GetDropDownList",
                            type: "Post",
                            contentType: "application/json",
                            data: { mode: "ExpenseType", condition1: "", condition2: "" },
                            dataType: 'json',
                            beforeSend: function(xhr){
                                xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                            }
                        },
                        parameterMap: function (data) {
                            var returnData = JSON.stringify(data);
                            return returnData
                        }
                    }
                },
                dataTextField: "ddlText",
                dataValueField: "ddlVal"
            }).data("kendoDropDownList");

        if(isEnabled == false)
        {
            enabledDropdown.enable(false);
        }

    };

    function fnGetModelList(){
        var arrList = [];
    $(".addEditRow").each(function(index){

            var model = {
        itemId: $(".addEditRow").eq(index).find('input[type="number"]').eq(0).val(),
    expenseId: 0,
    itemName: $(".addEditRow").eq(index).find('input[type="text"]').eq(1).val(),
    expenseType: $(".addEditRow").eq(index).find('input[type="text"]').eq(0).val(),
    itemPrice: $(".addEditRow").eq(index).find('input[type="text"]').eq(3).val(),
    itemQuantity: $(".addEditRow").eq(index).find('input[type="text"]').eq(2).val(),
    itemAmount: $(".addEditRow").eq(index).find('input[type="text"]').eq(4).val()
            };
    arrList.push(model);
        });
    return arrList;
        };

    function fnGetItemDetailModel(){
        var itemDetailData = JSON.stringify({
            expenseId : $('#expenseId').val(),
            expenseTitle: $('#ExpenseTitle').val(),
            expenseBy: $('#ExpenseBy').val(),
            brCode: @BrCode,
            branchName: $('#BranchName').val(),
            appliedBy: $('#AppliedBy').val(),
            status: $('#statusId').val(),
            expenseDate: "",
            item: fnGetModelList(),
            isRecommended: isRecommended,
            departmentId: $('#departmentId').val(),
            recommender: $('#recommenderId').val(),
            totalAmount: calculateTotal(),
            comment: $('#descId').val(),
            isApproved: 0,
            approvedBy: "",
            approvedDate: "",
            approverName: ""
        });
        return itemDetailData;
    };

    function fnModelSave(){
        var validationStatus = validateTextBoxesCM('ExpenseBy,ExpenseTitle,descId');

        if(validationStatus == true){
            $.ajax({
                url: WebApiUri + "/Expense/SaveExpense",
                type: 'POST',
                datatype: 'json',
                data: fnGetItemDetailModel(),
                contentType: "application/json;charset=utf-8",
                beforeSend: function(xhr){
                                xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                },
                success: function (result) {

                    $('#expenseId').attr('value',result.expenseId);
                    fileUpload();
                    toastr.success(result.retMsg);

                },
                error: function (res) {
                    toastr.error(res);
                },
                failure: function (errMsg) {
                }
            });
        }
        else
        {
            toastr.error("Validation failed");
        }
        
        };

    function fileUpload(){
        
        if($('#expenseId').val() != 0){
            // Checking whether FormData is available in browser  
            if (window.FormData !== undefined) {  

                var fileUpload = $("#FileUpload_FormFile").get(0);
                var files = fileUpload.files;

                // Create FormData object  
                var fileData = new FormData();

                // Looping over all files and add it to FormData object  
                for (var i = 0; i < files.length; i++) {
                    fileData.append($('#expenseId').val(), files[i]);  
                }

                $.ajax({
                    url: WebApiUri+"/Document/Upload",
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    beforeSend: function(xhr){
                            xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                        },
                    success: function (result) {
                        toastr.success(result);
                    },
                    error: function (err) {
                        toastr.error(err);  
                    }  
                    });  
            } 
            else 
            {
                toastr.error("FormData is not supported.");  
            }  
        } 
        else
        {
            toastr.error("Please Save Expense Item Detail First !!");
        }
    };

    function fnModelApprove(){

            var expenseIdSelected = $('#expenseId').val();

            if(expenseIdSelected > 0){

                if($('#Status').val() != ''){

                    $.ajax({
                        type: 'POST',
                        url: WebApiUri + '/Expense/RequestApproval',
                        datatype: 'json',
                        data: JSON.stringify({ExpenseId : expenseIdSelected,ForwardTo: $('#Status').val()}),
                        contentType: "application/json;charset=utf-8",
                        beforeSend: function(xhr){expenseIdSelected
                                xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                            },
                        success: function(response){
                            toastr.success(response);
                        }
                    });
                }
                else
                {

                    toastr.error('Please select where to forward first..!!!');
                }
                
            }
          
      };

      function fnModelCancelApprove(){

            var expenseIdSelected = $('#expenseId').val();

            if(expenseIdSelected > 0){

                $.ajax({
                    type: 'POST',
                    url: WebApiUri + '/Expense/RequestApproval',
                    datatype: 'json',
                    data: JSON.stringify({ExpenseId : expenseIdSelected,UserId: @userId,ForwardTo: '10'}),
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function(xhr){expenseIdSelected
                            xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                        },
                    success: function(response){
                        toastr.success(response);
                    }
                });
            }
          
      };

    function fnForwardList(){

        $("#Status").kendoDropDownList({
        optionLabel: "Select where to forward",
    height: 310,
    dataSource:{
        transport: {
        read: {
        url: WebApiUri + "/Common/GetForwardListDropDowns",
    type: "Post",
    contentType: "application/json",
    data: {expenseId: $('#expenseId').val() ,userId: "@userId"},
    dataType: 'json',
    beforeSend: function(xhr){
                            xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                        }
                            },
    parameterMap: function (data) {
                                var returnData = JSON.stringify(data);
    return returnData;
                            }
                        }
                    },
    dataTextField: "ddlText",
    dataValueField: "ddlVal"}).data("kendoDropDownList");
    };

    function fnApproveExpense(){
          //show loader
            var expenseIdSelected = $(".k-selected").find('td[role="gridcell"]').eq(0).html();

            if(expenseIdSelected != null){

                $.ajax({
                    type: 'POST',
                    url: WebApiUri + '/Expense/ApproveExpense',
                    datatype: 'json',
                    data: JSON.stringify({ExpenseId : expenseIdSelected,UserId: '@userId'}),
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function(xhr){
                            xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                        },
                    success: function(response){
                            toastr.success(response);
                            GridImplementation();
                    }
                });
                //$('.approveBtn').attr('style','background-color: green; color:white; padding: 4px; border-radius: calc(.5rem - 1px);');
            }
            else{
                toastr.warning('Select a Row');
            }
          
      };

      function fnCancelExpenseApproval(){
          //show loader
            var expenseIdSelected = $(".k-selected").find('td[role="gridcell"]').eq(0).html();

            if(expenseIdSelected != null){

                $.ajax({
                    type: 'POST',
                    url: WebApiUri + '/Expense/CancelExpenseApproval',
                    datatype: 'json',
                    data: JSON.stringify({ExpenseId : expenseIdSelected,UserId: '@userId'}),
                    contentType: "application/json;charset=utf-8",
                    beforeSend: function(xhr){
                            xhr.setRequestHeader('Authorization', 'Bearer ' + AccessToken);
                        },
                    success: function(response){
                            toastr.success(response);
                            GridImplementation();
                    }
                });
                //$('.approveBtn').attr('style','background-color: green; color:white; padding: 4px; border-radius: calc(.5rem - 1px);');
            }
            else{
                toastr.warning('Select a Row');
            }
        };


    function fnDisableifApproved() {
    
        
        if(@Model.Status != @userbranchstatus){

            $(".table-wrapper input,.table-wrapper textarea").each(function () {
                
                    $(this).attr("disabled",true);
                    $(this).addClass("disabledforApproved");

            });

            $("#Status").attr("disabled",false);
            $("#saveExpense").attr("disabled",true);
            $(".add-new").hide();
            $("a.add").hide();
            $("a.edit").hide();
            $("a.delete").hide();
        }
        else
        {
            $(".table-wrapper input,.table-wrapper textarea,.table-wrapper button").each(function () {
                
                    $(this).attr("disabled",false);
                    $(this).removeClass("disabledforApproved");
            });

        }
        
    
    };
</script>